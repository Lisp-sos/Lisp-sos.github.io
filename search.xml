<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Stm32之ADC</title>
      <link href="/cm6p0tavl00013st47g745ixb.html"/>
      <url>/cm6p0tavl00013st47g745ixb.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Stm32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stm32 </tag>
            
            <tag> ADC </tag>
            
            <tag> 单片机开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cpp学习</title>
      <link href="/cm6p0tavu000m3st4hmee7fq1.html"/>
      <url>/cm6p0tavu000m3st4hmee7fq1.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> cpp基础学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cpp </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Stm32之定时器</title>
      <link href="/cm6p0tavu000l3st4cln8dn01.html"/>
      <url>/cm6p0tavu000l3st4cln8dn01.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Stm32中定时器的使用无疑是至关重要的，通过使用定时器可以使我们的流程控制更加简单可控，还可以使我们的代码模块化，方便管理与调试。Stm32的定时器的使用分为定时中断、输出比较、输入捕获、编码器接口这几个主要部分，下面一一来介绍。</p></blockquote><h1 id="定时器框图"><a href="#定时器框图" class="headerlink" title="定时器框图"></a>定时器框图</h1><p><img src="/cm6p0tavu000l3st4cln8dn01/image-20250201222055382.png" alt="image-20250201222055382"></p><h1 id="定时中断"><a href="#定时中断" class="headerlink" title="定时中断"></a>定时中断</h1><h2 id="定时中断基本结构"><a href="#定时中断基本结构" class="headerlink" title="定时中断基本结构"></a>定时中断基本结构</h2><p><img src="/cm6p0tavu000l3st4cln8dn01/image-20250201222255621.png" alt="image-20250201222255621"></p><h2 id="影子寄存器"><a href="#影子寄存器" class="headerlink" title="影子寄存器"></a>影子寄存器</h2><p>影子寄存器：在改变自动重装寄存器TIMx_ARR时，若开启影子寄存器，该寄存器中的值不会立即更新，而是会在产生又一个更新事件后，更新该寄存器中的值，可以防止某些意外情况的发生。比如，初始ARR的值为5，当计数器中的值为4时更改ARR为3，此时4 &gt;3，但是不等于3，随着时间的增加，计数器中的值只会在超出计数器计数上限时溢出，当计数器中的值再次等于3时才会产生一次更新事件。</p><h2 id="计数器溢出频率"><a href="#计数器溢出频率" class="headerlink" title="计数器溢出频率"></a>计数器溢出频率</h2><p><strong>计数器溢出频率</strong>：CK_CNT_OV &#x3D; CK_CNT &#x2F; (ARR + 1)  &#x3D; CK_PSC &#x2F; (PSC + 1) &#x2F; (ARR + 1)</p><h2 id="定时器中断代码演示"><a href="#定时器中断代码演示" class="headerlink" title="定时器中断代码演示"></a>定时器中断代码演示</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE); <span class="comment">//开启时钟</span></span><br><span class="line">    </span><br><span class="line">    TIM_InternalClockConfig(TIM2); <span class="comment">//设置时钟源</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//时基单元设置</span></span><br><span class="line">    TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//分频系数</span></span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//向上计数模式</span></span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_Period = <span class="number">10000</span> - <span class="number">1</span>;<span class="comment">//ARR</span></span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">7200</span> - <span class="number">1</span>;<span class="comment">//psc</span></span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//RCR,仅高级定时器才有</span></span><br><span class="line">    TIM_TimeBaseInit(TIM2, &amp;TIM_TimeBaseInitStructure);</span><br><span class="line">    </span><br><span class="line">    TIM_ClearFlag(TIM2, TIM_FLAG_Update);<span class="comment">//清除标志位</span></span><br><span class="line">    TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);<span class="comment">//定时器中断使能</span></span><br><span class="line">    </span><br><span class="line">    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//NVIC分组，全局仅需配置一次</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//NVIC</span></span><br><span class="line">    NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;<span class="comment">//抢占优先级</span></span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;<span class="comment">//响应优先级</span></span><br><span class="line">    NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line">    </span><br><span class="line">    TIM_Cmd(TIM2, ENABLE);<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span><span class="comment">//中断函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (TIM_GetITStatus(TIM2, TIM_IT_Update) == SET)</span><br><span class="line">    &#123;</span><br><span class="line">        Num ++;</span><br><span class="line">        TIM_ClearITPendingBit(TIM2, TIM_IT_Update);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="一般情况下的定时中断配置步骤"><a href="#一般情况下的定时中断配置步骤" class="headerlink" title="一般情况下的定时中断配置步骤"></a>一般情况下的定时中断配置步骤</h2><ol><li>开启时钟；</li><li>选择时钟源；</li><li>配置时基单元；</li><li>中断配置；</li><li>NVIC优先级配置；</li><li>中断函数编写。</li></ol><h2 id="关于时钟源的选择"><a href="#关于时钟源的选择" class="headerlink" title="关于时钟源的选择"></a>关于时钟源的选择</h2><ol><li><p>内部时钟模式</p><ul><li>RCC内部时钟</li></ul></li><li><p>外部时钟模式2</p><ul><li>ETR外部时钟：使用外部触发输入（ETR）作为时钟源</li></ul></li><li><p>外部时钟模式1</p><ul><li>ETR外部时钟</li><li>ITRx其他定时器</li><li>TIx捕获通道</li></ul></li><li><p>编码器模式</p><ul><li>TIx捕获通道</li></ul></li></ol><h1 id="输出比较"><a href="#输出比较" class="headerlink" title="输出比较"></a>输出比较</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li><p>OC（Output Compare）输出比较输出比较</p></li><li><p>可以通过比较CNT与CCR寄存器值的关系，来对输出电平进行置1、置0或翻转的操作，用于输出一定频率和占空比的PWM波形</p></li><li><p>每个高级定时器和通用定时器都拥有4个输出比较通道</p></li><li><p>高级定时器的前3个通道额外拥有死区生成和互补输出的功能</p></li></ul><h2 id="PWM"><a href="#PWM" class="headerlink" title="PWM"></a>PWM</h2><ul><li><p>PWM（Pulse Width Modulation）脉冲宽度调制</p></li><li><p>在具有惯性的系统中，可以通过对一系列脉冲的宽度进行调制，来等效地获得所需要的模拟参量，常应用于电机控速等领域</p></li><li><p>PWM参数：     </p><ol><li><p>频率 &#x3D; $\frac{1}{T_{s}}$         </p></li><li><p>占空比 &#x3D;   $\frac{T_{ON}}{T_{S}}$</p></li><li><p>分辨率 &#x3D; 占空比变化步距</p></li></ol></li></ul><h2 id="输出比较代码演示"><a href="#输出比较代码演示" class="headerlink" title="输出比较代码演示"></a>输出比较代码演示</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//开启时钟</span></span><br><span class="line">    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);</span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE); //AFIO时钟开启</span></span><br><span class="line"><span class="comment">//    GPIO_PinRemapConfig(GPIO_PartialRemap1_TIM2, ENABLE);//重映射</span></span><br><span class="line"><span class="comment">//    GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);//解除调试端口占用</span></span><br><span class="line">    </span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;<span class="comment">//GPIO_Pin_15;</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//选择时钟源：内部时钟源:72MHz</span></span><br><span class="line">    TIM_InternalClockConfig(TIM2);</span><br><span class="line">    </span><br><span class="line">    TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//向上计数</span></span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_Period = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//ARR</span></span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">720</span> - <span class="number">1</span>;<span class="comment">//PSC</span></span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//RCR</span></span><br><span class="line">    TIM_TimeBaseInit(TIM2, &amp;TIM_TimeBaseInitStructure);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//输出比较配置</span></span><br><span class="line">    TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line">    TIM_OCStructInit(&amp;TIM_OCInitStructure);</span><br><span class="line">    TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//模式:PWM1，CNT&lt;CCR时高电平，CNT&gt;CCR时低电平</span></span><br><span class="line">    TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//极性选择</span></span><br><span class="line">    TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//使能</span></span><br><span class="line">    TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//CCR 捕获/比较寄存器</span></span><br><span class="line">    TIM_OC1Init(TIM2, &amp;TIM_OCInitStructure);<span class="comment">//通道1初始化</span></span><br><span class="line">    </span><br><span class="line">    TIM_Cmd(TIM2, ENABLE);<span class="comment">//开启定时器TIM2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span></span><br><span class="line">&#123;</span><br><span class="line">    TIM_SetCompare1(TIM2, Compare);<span class="comment">//更改CCR寄存器值：通道1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注意：使用高级定时器输出PWM时需要调用TIM_CtrlPWMOutputs()函数，否则不能正常输出。</p></blockquote><h1 id="输入捕获"><a href="#输入捕获" class="headerlink" title="输入捕获"></a>输入捕获</h1><blockquote><p>对于同一个定时器<strong>输入捕获</strong>和<strong>输出比较</strong>只能使用其中一个。</p></blockquote><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><ul><li><p>IC（Input Capture）输入捕获</p></li><li><p>输入捕获模式下，当通道输入引脚出现指定<strong>电平跳变</strong>时，当前<strong>CNT</strong>的值将被锁存到<strong>CCR</strong>中，可用于测量<strong>PWM</strong>波形的频率、占空比、脉冲间隔、电平持续时间等参数</p></li><li><p>每个高级定时器和通用定时器都拥有4个输入捕获通道</p></li><li><p>可配置为PWMI模式，同时测量频率和占空比</p></li><li><p>可配合主从触发模式，实现硬件全自动测量</p></li></ul><h2 id="频率测量"><a href="#频率测量" class="headerlink" title="频率测量"></a>频率测量</h2><ol><li><p>测频法：在闸门时间T内，对上升沿计次，得到N，则频率$f_{x} &#x3D; \frac{N}{T}$</p></li><li><p>测周法：两个上升沿内，以标准频率fc计次，得到N，则频率$f_x &#x3D; \frac{f_{c}}{N}$</p></li><li><p>中界频率：测频法与测周法误差相等的频率点$f_{m}&#x3D;\frac{\sqrt{f_{c}}}{T}$</p></li></ol><h2 id="输入捕获通道"><a href="#输入捕获通道" class="headerlink" title="输入捕获通道"></a>输入捕获通道</h2><p><img src="/cm6p0tavu000l3st4cln8dn01/image-20250203171218877.png" alt="image-20250203171218877"></p><h2 id="主从触发模式"><a href="#主从触发模式" class="headerlink" title="主从触发模式"></a>主从触发模式</h2><p><img src="/cm6p0tavu000l3st4cln8dn01/image-20250203171253977.png" alt="image-20250203171253977"></p><h2 id="输入捕获基本结构"><a href="#输入捕获基本结构" class="headerlink" title="输入捕获基本结构"></a>输入捕获基本结构</h2><p><img src="/cm6p0tavu000l3st4cln8dn01/image-20250203171331674.png" alt="image-20250203171331674"></p><h2 id="PWMI结构"><a href="#PWMI结构" class="headerlink" title="PWMI结构"></a>PWMI结构</h2><p><img src="/cm6p0tavu000l3st4cln8dn01/image-20250203171359863.png" alt="image-20250203171359863"></p><h2 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">IC_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//开启时钟</span></span><br><span class="line">    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);</span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//GPIO配置</span></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//选择时钟源</span></span><br><span class="line">    TIM_InternalClockConfig(TIM3);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//时基单元</span></span><br><span class="line">    TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_Period = <span class="number">65536</span> - <span class="number">1</span>;<span class="comment">//ARR</span></span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">72</span> - <span class="number">1</span>;<span class="comment">//PSC</span></span><br><span class="line">    TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;</span><br><span class="line">    TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseInitStructure);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//输入捕获配置</span></span><br><span class="line">    TIM_ICInitTypeDef TIM_ICInitStructure;</span><br><span class="line">    TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;<span class="comment">//通道</span></span><br><span class="line">    TIM_ICInitStructure.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//滤波器</span></span><br><span class="line">    TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;<span class="comment">//极性选择:上升沿触发</span></span><br><span class="line">    TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;<span class="comment">//预分频</span></span><br><span class="line">    TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;<span class="comment">//直连通道</span></span><br><span class="line">    TIM_PWMIConfig(TIM3, &amp;TIM_ICInitStructure);<span class="comment">//该函数能自动把对应的另一个通道配置成下降沿触发、交叉通道</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//从模式</span></span><br><span class="line">    TIM_SelectInputTrigger(TIM3, TIM_TS_TI1FP1);<span class="comment">//触发源选择</span></span><br><span class="line">    TIM_SelectSlaveMode(TIM3, TIM_SlaveMode_Reset);<span class="comment">//从模式选择:Reset模式</span></span><br><span class="line">    </span><br><span class="line">    TIM_Cmd(TIM3, ENABLE);<span class="comment">//开启定时器</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="编码器接口"><a href="#编码器接口" class="headerlink" title="编码器接口"></a>编码器接口</h1><h2 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h2><ul><li><p>Encoder Interface 编码器接口</p></li><li><p>编码器接口可接收增量（正交）编码器的信号，根据编码器旋转产生的正交信号脉冲，自动控制CNT自增或自减，从而指示编码器的位置、旋转方向和旋转速度</p></li><li><p>每个高级定时器和通用定时器都拥有1个编码器接口</p></li><li><p>两个输入引脚借用了输入捕获的通道1和通道2</p></li></ul><h2 id="正交编码器"><a href="#正交编码器" class="headerlink" title="正交编码器"></a>正交编码器</h2><p><img src="/cm6p0tavu000l3st4cln8dn01/image-20250203171631395.png" alt="image-20250203171631395"></p><h2 id="编码器接口基本结构"><a href="#编码器接口基本结构" class="headerlink" title="编码器接口基本结构"></a>编码器接口基本结构</h2><p><img src="/cm6p0tavu000l3st4cln8dn01/image-20250203171702111.png" alt="image-20250203171702111"></p>]]></content>
      
      
      <categories>
          
          <category> Stm32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stm32 </tag>
            
            <tag> 单片机开发 </tag>
            
            <tag> 定时器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基础语法</title>
      <link href="/cm6p0tavs000h3st42j399ri7.html"/>
      <url>/cm6p0tavs000h3st42j399ri7.html</url>
      
        <content type="html"><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>Markdown 使用 # 符号来表示标题，支持六级标题， # 的数量代表标题的级别。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题 </span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题 </span></span><br><span class="line"><span class="section">#### 四级标题 </span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><h1 id="段落与书写"><a href="#段落与书写" class="headerlink" title="段落与书写"></a>段落与书写</h1><p>这是一段文字，行尾+两个空格换行。    </p><p>这是第二段文字·····</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这是一段文字，行尾+两个空格换行。  </span><br><span class="line">这是第二段文字·····  </span><br></pre></td></tr></table></figure><h1 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span> 或 <span class="emphasis">_斜体_</span></span><br><span class="line"><span class="strong">**加粗**</span> 或 <span class="strong">__加粗__</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*斜体+加粗*</span>**</span> 或 <span class="strong">__<span class="emphasis">_斜体+加粗_</span>__</span></span><br></pre></td></tr></table></figure><p>效果：</p><p><em>斜体</em> 或 <em>斜体</em><br><strong>加粗</strong> 或 <strong>加粗</strong><br><em><strong>斜体+加粗</strong></em> 或 <em><strong>斜体+加粗</strong></em></p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>Markdown支持无序列表和有序列表。</p><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 项目一</span><br><span class="line"><span class="bullet">-</span> 项目二</span><br><span class="line"><span class="bullet">  -</span> 子项目一</span><br><span class="line"><span class="bullet">  -</span> 子项目二</span><br><span class="line"><span class="bullet">*</span> 项目三</span><br></pre></td></tr></table></figure><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 项目一</span><br><span class="line"><span class="bullet">2.</span> 项目二</span><br><span class="line"><span class="bullet">  1.</span> 子项目一</span><br><span class="line"><span class="bullet">  2.</span> 子项目二</span><br></pre></td></tr></table></figure><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Google</span>](<span class="link">http://www.google.com</span>)</span><br></pre></td></tr></table></figure><p>效果： <a href="http://www.google.com/">Google</a></p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>在Typora中可以直接将图片拖进来并自动复制至相应文件夹，其余方法不做演示。</p><p><img src="/cm6p0tavs000h3st42j399ri7/Sky_3.jpg" alt="Sky_3"></p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>引用使用 “&gt;” 进行标记，支持嵌套引用。 </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 这是一个引用。</span></span><br><span class="line">&gt;&gt; 这是嵌套引用。</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><blockquote><p>这是一个引用。</p><blockquote><p>这是嵌套引用。</p></blockquote></blockquote><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p>⾏内代码：⽤反引号（&#96;&#96;）包裹。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是 <span class="code">`行内代码`</span> 示例。</span><br></pre></td></tr></table></figure><p>效果：</p><p>这是 <code>行内代码</code> 示例。</p><p>代码块：⽤三个反引号（`&#96;&#96;）包裹，⽀持指定语⾔类型。 </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```python </span></span><br><span class="line"><span class="code">def hello(): </span></span><br><span class="line"><span class="code">    print(&quot;Hello, Markdown!&quot;) </span></span><br></pre></td></tr></table></figure><p>效果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(): </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello, Markdown!&quot;</span>) </span><br></pre></td></tr></table></figure><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>使用 | 和 - 创建表格。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 表头1 | 表头2 | 表头3 | </span><br><span class="line">|-------|-------|-------|</span><br><span class="line">| 数据1 | 数据2 | 数据3 |</span><br><span class="line">| 数据4 | 数据5 | 数据6 |</span><br></pre></td></tr></table></figure><p>效果：</p><table><thead><tr><th>表头1</th><th>表头2</th><th>表头3</th></tr></thead><tbody><tr><td>数据1</td><td>数据2</td><td>数据3</td></tr><tr><td>数据4</td><td>数据5</td><td>数据6</td></tr></tbody></table><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>使用三个或更多的 - 、 * 或 _ 创建分隔线。 </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line"><span class="strong">*** </span></span><br><span class="line"><span class="strong">__<span class="emphasis">_</span></span></span><br></pre></td></tr></table></figure><p>效果：</p><hr><h1 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h1><p>使用 - [ ] 创建未完成任务， - [x] 创建已完成任务。 </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [ ] 任务一 </span><br><span class="line"><span class="bullet">-</span> [x] 任务二 </span><br><span class="line"><span class="bullet">-</span> [ ] 任务三</span><br></pre></td></tr></table></figure><p>效果：</p><ul><li><input disabled="" type="checkbox"> 任务一 </li><li><input checked="" disabled="" type="checkbox"> 任务二 </li><li><input disabled="" type="checkbox"> 任务三</li></ul><h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\frac&#123;a&#125;&#123;b&#125;$</span><br></pre></td></tr></table></figure><p>效果：$\frac{a}{b}$</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown&#39;s Grammar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/cm6p0tavt000i3st4ffqc2e5q.html"/>
      <url>/cm6p0tavt000i3st4ffqc2e5q.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
